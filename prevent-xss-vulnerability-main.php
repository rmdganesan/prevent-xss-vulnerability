<?php

/**
 * @package PreventXSSVulnerability\Main
 */

// Make sure we don't expose any info if called directly
if ( !defined('ABSPATH') ) {
	echo 'Hi there!  I\'m just a plugin, not much I can do when called directly.';
	exit;
}

if ( !function_exists("add_action") || !function_exists("add_filter") ) {
	header( 'Status: 403 Forbidden' );
	header( 'HTTP/1.1 403 Forbidden' );
	exit();
}

define('PREVENT_XSS_VULNERABILITY_PLUGIN_VERSION', '0.1');

if ( !defined('PREVENT_XSS_VULNERABILITY_PATH') ) {
	define('PREVENT_XSS_VULNERABILITY_PATH', plugin_dir_path( __FILE__ ));
}

require_once(PREVENT_XSS_VULNERABILITY_PATH.'frontend/class.prevent-xss-vulnerability-frontend.php');

$prevent_xss_vulnerability_frontend = new Prevent_XSS_Vulnerability_Frontend();
$prevent_xss_vulnerability_frontend->init();

if ( is_admin() ) {
	require_once(PREVENT_XSS_VULNERABILITY_PATH.'admin/class.prevent-xss-vulnerability-admin.php');
	new Prevent_XSS_Vulnerability_Admin();

	$plugin = plugin_basename( (PREVENT_XSS_VULNERABILITY_FILE) );
	add_filter( "plugin_action_links_$plugin", 'prevent_xss_vulnerability_settings_link' );
}

/**
 * Plugin Settings Page Link on the Plugin Page under the Plugin Name
 */
 function prevent_xss_vulnerability_settings_link($links) {
	$settings_link = '<a href="admin.php?page=prevent-xss-vulnerability-settings">Settings</a>';
	array_unshift($links, $settings_link);
	return $links;
}
